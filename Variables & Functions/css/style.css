@import url("https://fonts.googleapis.com/css2?family=Nunito&display=swap");

/* || RESET */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* || Variables */
/* We have to write variabled in pseudo class :root 
HTML tag would even inherit from this root pseudo class
*/

/* var(), url(), some maths functions all are FUNCTIONS */
:root {
    /* FONT */
    /* FONT FAMILY */
    /* 
    --F:1.5rem "Nunito", sans-serif; 
    */
    --FF: "Nunito", sans-serif;
    /* FONT SIZE */
    /* --FS: 1.5rem; */

    /* 
    --FS: min(2.25rem, 3vh);
    
    MIN/MAX of 2 values and we write one absolute value and other which changes its value acc to heights 
    It's better to choose viewport height units for FONTS than it's viewport width

    IF CONFUSING : IGNORE
    MIN :- Maximum absolute value
    MAX :- Minimum absolute value
    */
    --FS: clamp(1.75rem, 3vh, 2.25rem);
    /* clamp(min, ideal size, max) */

    --FS-SM: clamp(1.25rem, 2vh, 1.5rem);
    --FS-XL: 3rem;

    /* COLOR */
    /* Can be uppercase or lowercase */
    --BGCOLOR: #475569;
    --ALT-BGCOLOR: #1E293B;
    /* WE CAN HAVE 2 VARIABLES WITH SAME VALUE */
    --RADIAL-COLOR: whitesmoke;
    --LIGHT-COLOR: whitesmoke;

    --DARK-COLOR: #000;

    /* SQUARE */
    --SQUARE-BGCOLOR: papayawhip;
    --SQUARE-SIZE: max(150px, 20vw);

    /* GENERAL */
    --PADDING: 0.5rem;
    --SHADOWS: 0 6px 5px -5px var(--DARK-COLOR);
    --BORDERS: 2px solid var(--DARK-COLOR);
}

/* For DARK MODE */
@media (prefers-color-scheme: light) {

    /* DARK Mode kaam karega isme bs */
    /*can have light, anything  also instead of dark but which is by default  */
    :root {
        --BGCOLOR: #000;
        --ALT-BGCOLOR: #333;
        --RADIAL-COLOR: rgb(217, 217, 217);
        /* SQUARE */
        --SQUARE-BGCOLOR: rgb(228, 162, 228);
    }
}

/* || GENERAL STYLES */
body {
    font: var(--FS) var(--FF);
    /* font: var(--F); */
    min-height: 100vh;
    background-color: var(--BGCOLOR);
    /* #475569 */
    background-image: radial-gradient(var(--RADIAL-COLOR), var(--BGCOLOR));
    display: flex;
    flex-direction: column;
}

header,
nav,
footer {
    display: grid;
    place-content: center;
    grid-template-columns: 100%;
    text-align: center;
}

header,
footer {
    position: sticky;
    background-color: var(--ALT-BGCOLOR);
    color: var(--LIGHT-COLOR);
}

header {
    top: 0;
}

nav {
    background-color: var(--LIGHT-COLOR);
    color: var(--DARK-COLOR);
    /* padding: var(--PADDING); */
    border-bottom: var(--BORDERS);
    /* border-bottom: 2px solid var(--DARK-COLOR); */
    /* Attaches one or more drop-shadows to the box. The property is a comma-separated list of shadows, each specified by 2-4 length values, an optional color(BY DEFAULT: Black Color), and an optional 'inset' keyword */
    box-shadow: var(--SHADOWS);
    /* 
    box-shadow: 0 6px 5px -5px var(--DARK-COLOR); 
                x y  below spread color*/
}

main {
    flex-grow: 1;
    /* USED FOR VARIABLES // Used FOR div, square fig. */
    /* 
    padding: 10px 0px;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-flow: row wrap;
    gap: min(4vw, 15px); 
    */

    /* USED FOR TOP 2 SECTIONS WRITTEN IN MAIN */

    /* padding: var(--PADDING); */
    /* 
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start; 
    */

    /* USED FOR DIV, SQUARE Fig FOR FUNCTIONS */
    padding: var(--PADDING);
    display: grid;
    /*                               value: min  max */
    grid-template-columns: repeat(4, minmax(100px, 300px));
    gap: min(2vw, 20px);
}

main section {
    flex-grow: 1;
    padding: var(--PADDING);
}

main aside {
    background-color: hsla(0, 0%, 20%, 0.8);
    color: var(--LIGHT-COLOR);
    font-size: var(--FS-SM);
    font-style: italic;
    padding: var(--PADDING);
}

.content {
    margin-top: 10px;
}

.tooltip {
    border-bottom: 1px dashed orange;
    position: relative;
}


/* When I hover upon Lorem, it changes to This is Latin Lorem because This is Latin is content before */
.tooltip:hover::before {
    /* The attr(n) function returns as a string the value of attribute n for the subject of the selector. */
    content: attr(data-tooltip);
    position: absolute;
    /* When we hover, it will shows somewhat 20px top position */
    top: -20px;
    /* All word in one line */
    white-space: nowrap;
    background-color: var(--DARK-COLOR);
    padding: var(--PADDING);
    border-radius: 15px;
}

footer {
    bottom: 0;
}

a:any-link {
    color: firebrick;
}

a:hover,
a:focus {
    /* FILTER: Processes an elementâ€™s rendering before it is displayed in the document, by applying one or more filter effects. */
    filter: brightness(150%);
    /* 
    hue color ko 180deg / ka opposite  color dikha deta h
    filter: hue-rotate(180deg);
    */
}

/* || FEATURES */

.square--highlight {
    /* Redefine Variables */
    --SQUARE-BGCOLOR: rebeccapurple;
}

.square {
    background-color: var(--SQUARE-BGCOLOR);
    /* width: var(--SQUARE-SIZE);
    height: var(--SQUARE-SIZE); */
    border: var(--BORDERS);
    border-radius: 15px;
    display: grid;
    place-content: center center;
    font-size: var(--FS-XL);
    box-shadow: var(--SHADOWS);
}

@media screen and (min-width: 576px) {
    main {
        flex-flow: row nowrap;
        justify-content: space-between;
    }

    main section {
        width: calc(70% - 5px);
    }

    main aside {
        width: calc(30% - 5px);
    }
}